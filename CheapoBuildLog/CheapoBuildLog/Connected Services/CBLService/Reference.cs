//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CheapoBuildLog.CBLService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="user", Namespace="http://schemas.datacontract.org/2004/07/CBLServer.Models")]
    [System.SerializableAttribute()]
    public partial class user : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CheapoBuildLog.CBLService.forum_thread[] forum_threadField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CheapoBuildLog.CBLService.rig[] rigsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CheapoBuildLog.CBLService.thread_comment[] thread_commentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string user_addressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> user_ageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string user_bioField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> user_birthdayField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string user_emailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string user_firstField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string user_genderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CheapoBuildLog.CBLService.user_group[] user_groupField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int user_idField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string user_lastField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string user_mobileField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string user_nicknameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string user_passwordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] user_pictureField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> user_rating_helpfulField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> user_rating_likeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> user_rating_usefulField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> user_registered_dateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> user_thread_countField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string user_usernameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CheapoBuildLog.CBLService.forum_thread[] forum_thread {
            get {
                return this.forum_threadField;
            }
            set {
                if ((object.ReferenceEquals(this.forum_threadField, value) != true)) {
                    this.forum_threadField = value;
                    this.RaisePropertyChanged("forum_thread");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CheapoBuildLog.CBLService.rig[] rigs {
            get {
                return this.rigsField;
            }
            set {
                if ((object.ReferenceEquals(this.rigsField, value) != true)) {
                    this.rigsField = value;
                    this.RaisePropertyChanged("rigs");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CheapoBuildLog.CBLService.thread_comment[] thread_comment {
            get {
                return this.thread_commentField;
            }
            set {
                if ((object.ReferenceEquals(this.thread_commentField, value) != true)) {
                    this.thread_commentField = value;
                    this.RaisePropertyChanged("thread_comment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string user_address {
            get {
                return this.user_addressField;
            }
            set {
                if ((object.ReferenceEquals(this.user_addressField, value) != true)) {
                    this.user_addressField = value;
                    this.RaisePropertyChanged("user_address");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> user_age {
            get {
                return this.user_ageField;
            }
            set {
                if ((this.user_ageField.Equals(value) != true)) {
                    this.user_ageField = value;
                    this.RaisePropertyChanged("user_age");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string user_bio {
            get {
                return this.user_bioField;
            }
            set {
                if ((object.ReferenceEquals(this.user_bioField, value) != true)) {
                    this.user_bioField = value;
                    this.RaisePropertyChanged("user_bio");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> user_birthday {
            get {
                return this.user_birthdayField;
            }
            set {
                if ((this.user_birthdayField.Equals(value) != true)) {
                    this.user_birthdayField = value;
                    this.RaisePropertyChanged("user_birthday");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string user_email {
            get {
                return this.user_emailField;
            }
            set {
                if ((object.ReferenceEquals(this.user_emailField, value) != true)) {
                    this.user_emailField = value;
                    this.RaisePropertyChanged("user_email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string user_first {
            get {
                return this.user_firstField;
            }
            set {
                if ((object.ReferenceEquals(this.user_firstField, value) != true)) {
                    this.user_firstField = value;
                    this.RaisePropertyChanged("user_first");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string user_gender {
            get {
                return this.user_genderField;
            }
            set {
                if ((object.ReferenceEquals(this.user_genderField, value) != true)) {
                    this.user_genderField = value;
                    this.RaisePropertyChanged("user_gender");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CheapoBuildLog.CBLService.user_group[] user_group {
            get {
                return this.user_groupField;
            }
            set {
                if ((object.ReferenceEquals(this.user_groupField, value) != true)) {
                    this.user_groupField = value;
                    this.RaisePropertyChanged("user_group");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int user_id {
            get {
                return this.user_idField;
            }
            set {
                if ((this.user_idField.Equals(value) != true)) {
                    this.user_idField = value;
                    this.RaisePropertyChanged("user_id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string user_last {
            get {
                return this.user_lastField;
            }
            set {
                if ((object.ReferenceEquals(this.user_lastField, value) != true)) {
                    this.user_lastField = value;
                    this.RaisePropertyChanged("user_last");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string user_mobile {
            get {
                return this.user_mobileField;
            }
            set {
                if ((object.ReferenceEquals(this.user_mobileField, value) != true)) {
                    this.user_mobileField = value;
                    this.RaisePropertyChanged("user_mobile");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string user_nickname {
            get {
                return this.user_nicknameField;
            }
            set {
                if ((object.ReferenceEquals(this.user_nicknameField, value) != true)) {
                    this.user_nicknameField = value;
                    this.RaisePropertyChanged("user_nickname");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string user_password {
            get {
                return this.user_passwordField;
            }
            set {
                if ((object.ReferenceEquals(this.user_passwordField, value) != true)) {
                    this.user_passwordField = value;
                    this.RaisePropertyChanged("user_password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] user_picture {
            get {
                return this.user_pictureField;
            }
            set {
                if ((object.ReferenceEquals(this.user_pictureField, value) != true)) {
                    this.user_pictureField = value;
                    this.RaisePropertyChanged("user_picture");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> user_rating_helpful {
            get {
                return this.user_rating_helpfulField;
            }
            set {
                if ((this.user_rating_helpfulField.Equals(value) != true)) {
                    this.user_rating_helpfulField = value;
                    this.RaisePropertyChanged("user_rating_helpful");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> user_rating_like {
            get {
                return this.user_rating_likeField;
            }
            set {
                if ((this.user_rating_likeField.Equals(value) != true)) {
                    this.user_rating_likeField = value;
                    this.RaisePropertyChanged("user_rating_like");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> user_rating_useful {
            get {
                return this.user_rating_usefulField;
            }
            set {
                if ((this.user_rating_usefulField.Equals(value) != true)) {
                    this.user_rating_usefulField = value;
                    this.RaisePropertyChanged("user_rating_useful");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> user_registered_date {
            get {
                return this.user_registered_dateField;
            }
            set {
                if ((this.user_registered_dateField.Equals(value) != true)) {
                    this.user_registered_dateField = value;
                    this.RaisePropertyChanged("user_registered_date");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> user_thread_count {
            get {
                return this.user_thread_countField;
            }
            set {
                if ((this.user_thread_countField.Equals(value) != true)) {
                    this.user_thread_countField = value;
                    this.RaisePropertyChanged("user_thread_count");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string user_username {
            get {
                return this.user_usernameField;
            }
            set {
                if ((object.ReferenceEquals(this.user_usernameField, value) != true)) {
                    this.user_usernameField = value;
                    this.RaisePropertyChanged("user_username");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="forum_thread", Namespace="http://schemas.datacontract.org/2004/07/CBLServer.Models")]
    [System.SerializableAttribute()]
    public partial class forum_thread : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CheapoBuildLog.CBLService.forum forumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int forum_idField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int forum_thread_idField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CheapoBuildLog.CBLService.thread threadField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int thread_idField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CheapoBuildLog.CBLService.user userField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int user_idField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CheapoBuildLog.CBLService.forum forum {
            get {
                return this.forumField;
            }
            set {
                if ((object.ReferenceEquals(this.forumField, value) != true)) {
                    this.forumField = value;
                    this.RaisePropertyChanged("forum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int forum_id {
            get {
                return this.forum_idField;
            }
            set {
                if ((this.forum_idField.Equals(value) != true)) {
                    this.forum_idField = value;
                    this.RaisePropertyChanged("forum_id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int forum_thread_id {
            get {
                return this.forum_thread_idField;
            }
            set {
                if ((this.forum_thread_idField.Equals(value) != true)) {
                    this.forum_thread_idField = value;
                    this.RaisePropertyChanged("forum_thread_id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CheapoBuildLog.CBLService.thread thread {
            get {
                return this.threadField;
            }
            set {
                if ((object.ReferenceEquals(this.threadField, value) != true)) {
                    this.threadField = value;
                    this.RaisePropertyChanged("thread");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int thread_id {
            get {
                return this.thread_idField;
            }
            set {
                if ((this.thread_idField.Equals(value) != true)) {
                    this.thread_idField = value;
                    this.RaisePropertyChanged("thread_id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CheapoBuildLog.CBLService.user user {
            get {
                return this.userField;
            }
            set {
                if ((object.ReferenceEquals(this.userField, value) != true)) {
                    this.userField = value;
                    this.RaisePropertyChanged("user");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int user_id {
            get {
                return this.user_idField;
            }
            set {
                if ((this.user_idField.Equals(value) != true)) {
                    this.user_idField = value;
                    this.RaisePropertyChanged("user_id");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="rig", Namespace="http://schemas.datacontract.org/2004/07/CBLServer.Models")]
    [System.SerializableAttribute()]
    public partial class rig : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string rig_GPUField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string rig_PSUField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string rig_caseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string rig_coolerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int rig_idField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string rig_motherboardField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string rig_nameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string rig_processorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string rig_ramField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CheapoBuildLog.CBLService.user userField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int user_idField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string rig_GPU {
            get {
                return this.rig_GPUField;
            }
            set {
                if ((object.ReferenceEquals(this.rig_GPUField, value) != true)) {
                    this.rig_GPUField = value;
                    this.RaisePropertyChanged("rig_GPU");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string rig_PSU {
            get {
                return this.rig_PSUField;
            }
            set {
                if ((object.ReferenceEquals(this.rig_PSUField, value) != true)) {
                    this.rig_PSUField = value;
                    this.RaisePropertyChanged("rig_PSU");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string rig_case {
            get {
                return this.rig_caseField;
            }
            set {
                if ((object.ReferenceEquals(this.rig_caseField, value) != true)) {
                    this.rig_caseField = value;
                    this.RaisePropertyChanged("rig_case");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string rig_cooler {
            get {
                return this.rig_coolerField;
            }
            set {
                if ((object.ReferenceEquals(this.rig_coolerField, value) != true)) {
                    this.rig_coolerField = value;
                    this.RaisePropertyChanged("rig_cooler");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int rig_id {
            get {
                return this.rig_idField;
            }
            set {
                if ((this.rig_idField.Equals(value) != true)) {
                    this.rig_idField = value;
                    this.RaisePropertyChanged("rig_id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string rig_motherboard {
            get {
                return this.rig_motherboardField;
            }
            set {
                if ((object.ReferenceEquals(this.rig_motherboardField, value) != true)) {
                    this.rig_motherboardField = value;
                    this.RaisePropertyChanged("rig_motherboard");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string rig_name {
            get {
                return this.rig_nameField;
            }
            set {
                if ((object.ReferenceEquals(this.rig_nameField, value) != true)) {
                    this.rig_nameField = value;
                    this.RaisePropertyChanged("rig_name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string rig_processor {
            get {
                return this.rig_processorField;
            }
            set {
                if ((object.ReferenceEquals(this.rig_processorField, value) != true)) {
                    this.rig_processorField = value;
                    this.RaisePropertyChanged("rig_processor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string rig_ram {
            get {
                return this.rig_ramField;
            }
            set {
                if ((object.ReferenceEquals(this.rig_ramField, value) != true)) {
                    this.rig_ramField = value;
                    this.RaisePropertyChanged("rig_ram");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CheapoBuildLog.CBLService.user user {
            get {
                return this.userField;
            }
            set {
                if ((object.ReferenceEquals(this.userField, value) != true)) {
                    this.userField = value;
                    this.RaisePropertyChanged("user");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int user_id {
            get {
                return this.user_idField;
            }
            set {
                if ((this.user_idField.Equals(value) != true)) {
                    this.user_idField = value;
                    this.RaisePropertyChanged("user_id");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="thread_comment", Namespace="http://schemas.datacontract.org/2004/07/CBLServer.Models")]
    [System.SerializableAttribute()]
    public partial class thread_comment : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CheapoBuildLog.CBLService.comment commentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int comment_idField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CheapoBuildLog.CBLService.thread threadField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int thread_comment_idField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int thread_idField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CheapoBuildLog.CBLService.user userField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int user_idField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CheapoBuildLog.CBLService.comment comment {
            get {
                return this.commentField;
            }
            set {
                if ((object.ReferenceEquals(this.commentField, value) != true)) {
                    this.commentField = value;
                    this.RaisePropertyChanged("comment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int comment_id {
            get {
                return this.comment_idField;
            }
            set {
                if ((this.comment_idField.Equals(value) != true)) {
                    this.comment_idField = value;
                    this.RaisePropertyChanged("comment_id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CheapoBuildLog.CBLService.thread thread {
            get {
                return this.threadField;
            }
            set {
                if ((object.ReferenceEquals(this.threadField, value) != true)) {
                    this.threadField = value;
                    this.RaisePropertyChanged("thread");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int thread_comment_id {
            get {
                return this.thread_comment_idField;
            }
            set {
                if ((this.thread_comment_idField.Equals(value) != true)) {
                    this.thread_comment_idField = value;
                    this.RaisePropertyChanged("thread_comment_id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int thread_id {
            get {
                return this.thread_idField;
            }
            set {
                if ((this.thread_idField.Equals(value) != true)) {
                    this.thread_idField = value;
                    this.RaisePropertyChanged("thread_id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CheapoBuildLog.CBLService.user user {
            get {
                return this.userField;
            }
            set {
                if ((object.ReferenceEquals(this.userField, value) != true)) {
                    this.userField = value;
                    this.RaisePropertyChanged("user");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int user_id {
            get {
                return this.user_idField;
            }
            set {
                if ((this.user_idField.Equals(value) != true)) {
                    this.user_idField = value;
                    this.RaisePropertyChanged("user_id");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="user_group", Namespace="http://schemas.datacontract.org/2004/07/CBLServer.Models")]
    [System.SerializableAttribute()]
    public partial class user_group : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CheapoBuildLog.CBLService.group groupField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int group_idField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CheapoBuildLog.CBLService.user userField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int user_group_idField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int user_idField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CheapoBuildLog.CBLService.group group {
            get {
                return this.groupField;
            }
            set {
                if ((object.ReferenceEquals(this.groupField, value) != true)) {
                    this.groupField = value;
                    this.RaisePropertyChanged("group");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int group_id {
            get {
                return this.group_idField;
            }
            set {
                if ((this.group_idField.Equals(value) != true)) {
                    this.group_idField = value;
                    this.RaisePropertyChanged("group_id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CheapoBuildLog.CBLService.user user {
            get {
                return this.userField;
            }
            set {
                if ((object.ReferenceEquals(this.userField, value) != true)) {
                    this.userField = value;
                    this.RaisePropertyChanged("user");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int user_group_id {
            get {
                return this.user_group_idField;
            }
            set {
                if ((this.user_group_idField.Equals(value) != true)) {
                    this.user_group_idField = value;
                    this.RaisePropertyChanged("user_group_id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int user_id {
            get {
                return this.user_idField;
            }
            set {
                if ((this.user_idField.Equals(value) != true)) {
                    this.user_idField = value;
                    this.RaisePropertyChanged("user_id");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="forum", Namespace="http://schemas.datacontract.org/2004/07/CBLServer.Models")]
    [System.SerializableAttribute()]
    public partial class forum : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string forum_descriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int forum_idField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> forum_islockedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string forum_nameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string forum_permissionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CheapoBuildLog.CBLService.forum_thread[] forum_threadField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string forum_description {
            get {
                return this.forum_descriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.forum_descriptionField, value) != true)) {
                    this.forum_descriptionField = value;
                    this.RaisePropertyChanged("forum_description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int forum_id {
            get {
                return this.forum_idField;
            }
            set {
                if ((this.forum_idField.Equals(value) != true)) {
                    this.forum_idField = value;
                    this.RaisePropertyChanged("forum_id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> forum_islocked {
            get {
                return this.forum_islockedField;
            }
            set {
                if ((this.forum_islockedField.Equals(value) != true)) {
                    this.forum_islockedField = value;
                    this.RaisePropertyChanged("forum_islocked");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string forum_name {
            get {
                return this.forum_nameField;
            }
            set {
                if ((object.ReferenceEquals(this.forum_nameField, value) != true)) {
                    this.forum_nameField = value;
                    this.RaisePropertyChanged("forum_name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string forum_permission {
            get {
                return this.forum_permissionField;
            }
            set {
                if ((object.ReferenceEquals(this.forum_permissionField, value) != true)) {
                    this.forum_permissionField = value;
                    this.RaisePropertyChanged("forum_permission");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CheapoBuildLog.CBLService.forum_thread[] forum_thread {
            get {
                return this.forum_threadField;
            }
            set {
                if ((object.ReferenceEquals(this.forum_threadField, value) != true)) {
                    this.forum_threadField = value;
                    this.RaisePropertyChanged("forum_thread");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="thread", Namespace="http://schemas.datacontract.org/2004/07/CBLServer.Models")]
    [System.SerializableAttribute()]
    public partial class thread : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CheapoBuildLog.CBLService.forum_thread[] forum_threadField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CheapoBuildLog.CBLService.thread_comment[] thread_commentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> thread_createdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string thread_descriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int thread_idField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> thread_iscommentlockField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> thread_islockedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string thread_permissionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> thread_rating_helpfulField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> thread_rating_likeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string thread_titleField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CheapoBuildLog.CBLService.forum_thread[] forum_thread {
            get {
                return this.forum_threadField;
            }
            set {
                if ((object.ReferenceEquals(this.forum_threadField, value) != true)) {
                    this.forum_threadField = value;
                    this.RaisePropertyChanged("forum_thread");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CheapoBuildLog.CBLService.thread_comment[] thread_comment {
            get {
                return this.thread_commentField;
            }
            set {
                if ((object.ReferenceEquals(this.thread_commentField, value) != true)) {
                    this.thread_commentField = value;
                    this.RaisePropertyChanged("thread_comment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> thread_created {
            get {
                return this.thread_createdField;
            }
            set {
                if ((this.thread_createdField.Equals(value) != true)) {
                    this.thread_createdField = value;
                    this.RaisePropertyChanged("thread_created");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string thread_description {
            get {
                return this.thread_descriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.thread_descriptionField, value) != true)) {
                    this.thread_descriptionField = value;
                    this.RaisePropertyChanged("thread_description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int thread_id {
            get {
                return this.thread_idField;
            }
            set {
                if ((this.thread_idField.Equals(value) != true)) {
                    this.thread_idField = value;
                    this.RaisePropertyChanged("thread_id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> thread_iscommentlock {
            get {
                return this.thread_iscommentlockField;
            }
            set {
                if ((this.thread_iscommentlockField.Equals(value) != true)) {
                    this.thread_iscommentlockField = value;
                    this.RaisePropertyChanged("thread_iscommentlock");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> thread_islocked {
            get {
                return this.thread_islockedField;
            }
            set {
                if ((this.thread_islockedField.Equals(value) != true)) {
                    this.thread_islockedField = value;
                    this.RaisePropertyChanged("thread_islocked");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string thread_permission {
            get {
                return this.thread_permissionField;
            }
            set {
                if ((object.ReferenceEquals(this.thread_permissionField, value) != true)) {
                    this.thread_permissionField = value;
                    this.RaisePropertyChanged("thread_permission");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> thread_rating_helpful {
            get {
                return this.thread_rating_helpfulField;
            }
            set {
                if ((this.thread_rating_helpfulField.Equals(value) != true)) {
                    this.thread_rating_helpfulField = value;
                    this.RaisePropertyChanged("thread_rating_helpful");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> thread_rating_like {
            get {
                return this.thread_rating_likeField;
            }
            set {
                if ((this.thread_rating_likeField.Equals(value) != true)) {
                    this.thread_rating_likeField = value;
                    this.RaisePropertyChanged("thread_rating_like");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string thread_title {
            get {
                return this.thread_titleField;
            }
            set {
                if ((object.ReferenceEquals(this.thread_titleField, value) != true)) {
                    this.thread_titleField = value;
                    this.RaisePropertyChanged("thread_title");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="comment", Namespace="http://schemas.datacontract.org/2004/07/CBLServer.Models")]
    [System.SerializableAttribute()]
    public partial class comment : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string comment_descriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int comment_idField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CheapoBuildLog.CBLService.thread_comment[] thread_commentField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string comment_description {
            get {
                return this.comment_descriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.comment_descriptionField, value) != true)) {
                    this.comment_descriptionField = value;
                    this.RaisePropertyChanged("comment_description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int comment_id {
            get {
                return this.comment_idField;
            }
            set {
                if ((this.comment_idField.Equals(value) != true)) {
                    this.comment_idField = value;
                    this.RaisePropertyChanged("comment_id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CheapoBuildLog.CBLService.thread_comment[] thread_comment {
            get {
                return this.thread_commentField;
            }
            set {
                if ((object.ReferenceEquals(this.thread_commentField, value) != true)) {
                    this.thread_commentField = value;
                    this.RaisePropertyChanged("thread_comment");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="group", Namespace="http://schemas.datacontract.org/2004/07/CBLServer.Models")]
    [System.SerializableAttribute()]
    public partial class group : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string group_bioField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string group_descriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int group_idField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string group_nameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CheapoBuildLog.CBLService.group_perm[] group_permField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CheapoBuildLog.CBLService.user_group[] user_groupField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string group_bio {
            get {
                return this.group_bioField;
            }
            set {
                if ((object.ReferenceEquals(this.group_bioField, value) != true)) {
                    this.group_bioField = value;
                    this.RaisePropertyChanged("group_bio");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string group_description {
            get {
                return this.group_descriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.group_descriptionField, value) != true)) {
                    this.group_descriptionField = value;
                    this.RaisePropertyChanged("group_description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int group_id {
            get {
                return this.group_idField;
            }
            set {
                if ((this.group_idField.Equals(value) != true)) {
                    this.group_idField = value;
                    this.RaisePropertyChanged("group_id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string group_name {
            get {
                return this.group_nameField;
            }
            set {
                if ((object.ReferenceEquals(this.group_nameField, value) != true)) {
                    this.group_nameField = value;
                    this.RaisePropertyChanged("group_name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CheapoBuildLog.CBLService.group_perm[] group_perm {
            get {
                return this.group_permField;
            }
            set {
                if ((object.ReferenceEquals(this.group_permField, value) != true)) {
                    this.group_permField = value;
                    this.RaisePropertyChanged("group_perm");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CheapoBuildLog.CBLService.user_group[] user_group {
            get {
                return this.user_groupField;
            }
            set {
                if ((object.ReferenceEquals(this.user_groupField, value) != true)) {
                    this.user_groupField = value;
                    this.RaisePropertyChanged("user_group");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="group_perm", Namespace="http://schemas.datacontract.org/2004/07/CBLServer.Models")]
    [System.SerializableAttribute()]
    public partial class group_perm : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CheapoBuildLog.CBLService.group groupField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int group_idField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int group_perm_idField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int perm_idField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CheapoBuildLog.CBLService.permission permissionField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CheapoBuildLog.CBLService.group group {
            get {
                return this.groupField;
            }
            set {
                if ((object.ReferenceEquals(this.groupField, value) != true)) {
                    this.groupField = value;
                    this.RaisePropertyChanged("group");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int group_id {
            get {
                return this.group_idField;
            }
            set {
                if ((this.group_idField.Equals(value) != true)) {
                    this.group_idField = value;
                    this.RaisePropertyChanged("group_id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int group_perm_id {
            get {
                return this.group_perm_idField;
            }
            set {
                if ((this.group_perm_idField.Equals(value) != true)) {
                    this.group_perm_idField = value;
                    this.RaisePropertyChanged("group_perm_id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int perm_id {
            get {
                return this.perm_idField;
            }
            set {
                if ((this.perm_idField.Equals(value) != true)) {
                    this.perm_idField = value;
                    this.RaisePropertyChanged("perm_id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CheapoBuildLog.CBLService.permission permission {
            get {
                return this.permissionField;
            }
            set {
                if ((object.ReferenceEquals(this.permissionField, value) != true)) {
                    this.permissionField = value;
                    this.RaisePropertyChanged("permission");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="permission", Namespace="http://schemas.datacontract.org/2004/07/CBLServer.Models")]
    [System.SerializableAttribute()]
    public partial class permission : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CheapoBuildLog.CBLService.group_perm[] group_permField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int perm_idField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string perm_nameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CheapoBuildLog.CBLService.group_perm[] group_perm {
            get {
                return this.group_permField;
            }
            set {
                if ((object.ReferenceEquals(this.group_permField, value) != true)) {
                    this.group_permField = value;
                    this.RaisePropertyChanged("group_perm");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int perm_id {
            get {
                return this.perm_idField;
            }
            set {
                if ((this.perm_idField.Equals(value) != true)) {
                    this.perm_idField = value;
                    this.RaisePropertyChanged("perm_id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string perm_name {
            get {
                return this.perm_nameField;
            }
            set {
                if ((object.ReferenceEquals(this.perm_nameField, value) != true)) {
                    this.perm_nameField = value;
                    this.RaisePropertyChanged("perm_name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ThreadModel.ForumThread", Namespace="http://schemas.datacontract.org/2004/07/CBLServer.Models")]
    [System.SerializableAttribute()]
    public partial class ThreadModelForumThread : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string forum_descriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int forum_idField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> forum_islockedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string forum_nameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string forum_permissionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> thread_createdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string thread_descriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int thread_idField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> thread_iscommentlockField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> thread_islockedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string thread_permissionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> thread_rating_helpfulField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> thread_rating_likeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string thread_titleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int user_idField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string user_nicknameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] user_pictureField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string user_usernameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string forum_description {
            get {
                return this.forum_descriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.forum_descriptionField, value) != true)) {
                    this.forum_descriptionField = value;
                    this.RaisePropertyChanged("forum_description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int forum_id {
            get {
                return this.forum_idField;
            }
            set {
                if ((this.forum_idField.Equals(value) != true)) {
                    this.forum_idField = value;
                    this.RaisePropertyChanged("forum_id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> forum_islocked {
            get {
                return this.forum_islockedField;
            }
            set {
                if ((this.forum_islockedField.Equals(value) != true)) {
                    this.forum_islockedField = value;
                    this.RaisePropertyChanged("forum_islocked");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string forum_name {
            get {
                return this.forum_nameField;
            }
            set {
                if ((object.ReferenceEquals(this.forum_nameField, value) != true)) {
                    this.forum_nameField = value;
                    this.RaisePropertyChanged("forum_name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string forum_permission {
            get {
                return this.forum_permissionField;
            }
            set {
                if ((object.ReferenceEquals(this.forum_permissionField, value) != true)) {
                    this.forum_permissionField = value;
                    this.RaisePropertyChanged("forum_permission");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> thread_created {
            get {
                return this.thread_createdField;
            }
            set {
                if ((this.thread_createdField.Equals(value) != true)) {
                    this.thread_createdField = value;
                    this.RaisePropertyChanged("thread_created");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string thread_description {
            get {
                return this.thread_descriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.thread_descriptionField, value) != true)) {
                    this.thread_descriptionField = value;
                    this.RaisePropertyChanged("thread_description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int thread_id {
            get {
                return this.thread_idField;
            }
            set {
                if ((this.thread_idField.Equals(value) != true)) {
                    this.thread_idField = value;
                    this.RaisePropertyChanged("thread_id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> thread_iscommentlock {
            get {
                return this.thread_iscommentlockField;
            }
            set {
                if ((this.thread_iscommentlockField.Equals(value) != true)) {
                    this.thread_iscommentlockField = value;
                    this.RaisePropertyChanged("thread_iscommentlock");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> thread_islocked {
            get {
                return this.thread_islockedField;
            }
            set {
                if ((this.thread_islockedField.Equals(value) != true)) {
                    this.thread_islockedField = value;
                    this.RaisePropertyChanged("thread_islocked");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string thread_permission {
            get {
                return this.thread_permissionField;
            }
            set {
                if ((object.ReferenceEquals(this.thread_permissionField, value) != true)) {
                    this.thread_permissionField = value;
                    this.RaisePropertyChanged("thread_permission");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> thread_rating_helpful {
            get {
                return this.thread_rating_helpfulField;
            }
            set {
                if ((this.thread_rating_helpfulField.Equals(value) != true)) {
                    this.thread_rating_helpfulField = value;
                    this.RaisePropertyChanged("thread_rating_helpful");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> thread_rating_like {
            get {
                return this.thread_rating_likeField;
            }
            set {
                if ((this.thread_rating_likeField.Equals(value) != true)) {
                    this.thread_rating_likeField = value;
                    this.RaisePropertyChanged("thread_rating_like");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string thread_title {
            get {
                return this.thread_titleField;
            }
            set {
                if ((object.ReferenceEquals(this.thread_titleField, value) != true)) {
                    this.thread_titleField = value;
                    this.RaisePropertyChanged("thread_title");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int user_id {
            get {
                return this.user_idField;
            }
            set {
                if ((this.user_idField.Equals(value) != true)) {
                    this.user_idField = value;
                    this.RaisePropertyChanged("user_id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string user_nickname {
            get {
                return this.user_nicknameField;
            }
            set {
                if ((object.ReferenceEquals(this.user_nicknameField, value) != true)) {
                    this.user_nicknameField = value;
                    this.RaisePropertyChanged("user_nickname");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] user_picture {
            get {
                return this.user_pictureField;
            }
            set {
                if ((object.ReferenceEquals(this.user_pictureField, value) != true)) {
                    this.user_pictureField = value;
                    this.RaisePropertyChanged("user_picture");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string user_username {
            get {
                return this.user_usernameField;
            }
            set {
                if ((object.ReferenceEquals(this.user_usernameField, value) != true)) {
                    this.user_usernameField = value;
                    this.RaisePropertyChanged("user_username");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CommentModel.ThreadComment", Namespace="http://schemas.datacontract.org/2004/07/CBLServer.Models")]
    [System.SerializableAttribute()]
    public partial class CommentModelThreadComment : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string comment_descriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int comment_idField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int user_idField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] user_pictureField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string user_usernameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string comment_description {
            get {
                return this.comment_descriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.comment_descriptionField, value) != true)) {
                    this.comment_descriptionField = value;
                    this.RaisePropertyChanged("comment_description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int comment_id {
            get {
                return this.comment_idField;
            }
            set {
                if ((this.comment_idField.Equals(value) != true)) {
                    this.comment_idField = value;
                    this.RaisePropertyChanged("comment_id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int user_id {
            get {
                return this.user_idField;
            }
            set {
                if ((this.user_idField.Equals(value) != true)) {
                    this.user_idField = value;
                    this.RaisePropertyChanged("user_id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] user_picture {
            get {
                return this.user_pictureField;
            }
            set {
                if ((object.ReferenceEquals(this.user_pictureField, value) != true)) {
                    this.user_pictureField = value;
                    this.RaisePropertyChanged("user_picture");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string user_username {
            get {
                return this.user_usernameField;
            }
            set {
                if ((object.ReferenceEquals(this.user_usernameField, value) != true)) {
                    this.user_usernameField = value;
                    this.RaisePropertyChanged("user_username");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="CBLService.ICBLService")]
    public interface ICBLService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICBLService/AddUser", ReplyAction="http://tempuri.org/ICBLService/AddUserResponse")]
        int AddUser(
                    int user_id, 
                    string user_first, 
                    string user_last, 
                    string user_username, 
                    string user_nickname, 
                    string user_password, 
                    string user_address, 
                    int user_rating_useful, 
                    string user_gender, 
                    System.DateTime user_registered_date, 
                    System.DateTime user_birthday, 
                    string user_email, 
                    byte[] user_picture, 
                    int user_age, 
                    string user_bio, 
                    string user_mobile, 
                    int user_rating_helpful, 
                    int user_rating_like, 
                    int user_thread_count);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICBLService/AddUser", ReplyAction="http://tempuri.org/ICBLService/AddUserResponse")]
        System.Threading.Tasks.Task<int> AddUserAsync(
                    int user_id, 
                    string user_first, 
                    string user_last, 
                    string user_username, 
                    string user_nickname, 
                    string user_password, 
                    string user_address, 
                    int user_rating_useful, 
                    string user_gender, 
                    System.DateTime user_registered_date, 
                    System.DateTime user_birthday, 
                    string user_email, 
                    byte[] user_picture, 
                    int user_age, 
                    string user_bio, 
                    string user_mobile, 
                    int user_rating_helpful, 
                    int user_rating_like, 
                    int user_thread_count);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICBLService/UpdateUser", ReplyAction="http://tempuri.org/ICBLService/UpdateUserResponse")]
        void UpdateUser(
                    int user_id, 
                    string user_first, 
                    string user_last, 
                    string user_username, 
                    string user_nickname, 
                    string user_password, 
                    string user_address, 
                    int user_rating_useful, 
                    string user_gender, 
                    System.DateTime user_registered_date, 
                    System.DateTime user_birthday, 
                    string user_email, 
                    byte[] user_picture, 
                    int user_age, 
                    string user_bio, 
                    string user_mobile, 
                    int user_rating_helpful, 
                    int user_rating_like, 
                    int user_thread_count);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICBLService/UpdateUser", ReplyAction="http://tempuri.org/ICBLService/UpdateUserResponse")]
        System.Threading.Tasks.Task UpdateUserAsync(
                    int user_id, 
                    string user_first, 
                    string user_last, 
                    string user_username, 
                    string user_nickname, 
                    string user_password, 
                    string user_address, 
                    int user_rating_useful, 
                    string user_gender, 
                    System.DateTime user_registered_date, 
                    System.DateTime user_birthday, 
                    string user_email, 
                    byte[] user_picture, 
                    int user_age, 
                    string user_bio, 
                    string user_mobile, 
                    int user_rating_helpful, 
                    int user_rating_like, 
                    int user_thread_count);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICBLService/DeleteUser", ReplyAction="http://tempuri.org/ICBLService/DeleteUserResponse")]
        void DeleteUser(int user_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICBLService/DeleteUser", ReplyAction="http://tempuri.org/ICBLService/DeleteUserResponse")]
        System.Threading.Tasks.Task DeleteUserAsync(int user_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICBLService/GetAllUser", ReplyAction="http://tempuri.org/ICBLService/GetAllUserResponse")]
        CheapoBuildLog.CBLService.user[] GetAllUser();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICBLService/GetAllUser", ReplyAction="http://tempuri.org/ICBLService/GetAllUserResponse")]
        System.Threading.Tasks.Task<CheapoBuildLog.CBLService.user[]> GetAllUserAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICBLService/GetUser", ReplyAction="http://tempuri.org/ICBLService/GetUserResponse")]
        CheapoBuildLog.CBLService.user[] GetUser(string userEmail);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICBLService/GetUser", ReplyAction="http://tempuri.org/ICBLService/GetUserResponse")]
        System.Threading.Tasks.Task<CheapoBuildLog.CBLService.user[]> GetUserAsync(string userEmail);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICBLService/GetThreads", ReplyAction="http://tempuri.org/ICBLService/GetThreadsResponse")]
        CheapoBuildLog.CBLService.thread[] GetThreads(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICBLService/GetThreads", ReplyAction="http://tempuri.org/ICBLService/GetThreadsResponse")]
        System.Threading.Tasks.Task<CheapoBuildLog.CBLService.thread[]> GetThreadsAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICBLService/GetTotalThreads", ReplyAction="http://tempuri.org/ICBLService/GetTotalThreadsResponse")]
        int GetTotalThreads();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICBLService/GetTotalThreads", ReplyAction="http://tempuri.org/ICBLService/GetTotalThreadsResponse")]
        System.Threading.Tasks.Task<int> GetTotalThreadsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICBLService/GetUserCount", ReplyAction="http://tempuri.org/ICBLService/GetUserCountResponse")]
        int GetUserCount();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICBLService/GetUserCount", ReplyAction="http://tempuri.org/ICBLService/GetUserCountResponse")]
        System.Threading.Tasks.Task<int> GetUserCountAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICBLService/GetCurrentThread", ReplyAction="http://tempuri.org/ICBLService/GetCurrentThreadResponse")]
        CheapoBuildLog.CBLService.ThreadModelForumThread[] GetCurrentThread(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICBLService/GetCurrentThread", ReplyAction="http://tempuri.org/ICBLService/GetCurrentThreadResponse")]
        System.Threading.Tasks.Task<CheapoBuildLog.CBLService.ThreadModelForumThread[]> GetCurrentThreadAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICBLService/GetCurrentThreadForum", ReplyAction="http://tempuri.org/ICBLService/GetCurrentThreadForumResponse")]
        CheapoBuildLog.CBLService.ThreadModelForumThread[] GetCurrentThreadForum();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICBLService/GetCurrentThreadForum", ReplyAction="http://tempuri.org/ICBLService/GetCurrentThreadForumResponse")]
        System.Threading.Tasks.Task<CheapoBuildLog.CBLService.ThreadModelForumThread[]> GetCurrentThreadForumAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICBLService/CreateThread", ReplyAction="http://tempuri.org/ICBLService/CreateThreadResponse")]
        int CreateThread(int user_id, int forum_id, string thread_title, string thread_description);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICBLService/CreateThread", ReplyAction="http://tempuri.org/ICBLService/CreateThreadResponse")]
        System.Threading.Tasks.Task<int> CreateThreadAsync(int user_id, int forum_id, string thread_title, string thread_description);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICBLService/GetUserByID", ReplyAction="http://tempuri.org/ICBLService/GetUserByIDResponse")]
        CheapoBuildLog.CBLService.user[] GetUserByID(int userID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICBLService/GetUserByID", ReplyAction="http://tempuri.org/ICBLService/GetUserByIDResponse")]
        System.Threading.Tasks.Task<CheapoBuildLog.CBLService.user[]> GetUserByIDAsync(int userID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICBLService/getThreadComment", ReplyAction="http://tempuri.org/ICBLService/getThreadCommentResponse")]
        CheapoBuildLog.CBLService.CommentModelThreadComment[] getThreadComment(int thread_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICBLService/getThreadComment", ReplyAction="http://tempuri.org/ICBLService/getThreadCommentResponse")]
        System.Threading.Tasks.Task<CheapoBuildLog.CBLService.CommentModelThreadComment[]> getThreadCommentAsync(int thread_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICBLService/AddComment", ReplyAction="http://tempuri.org/ICBLService/AddCommentResponse")]
        void AddComment(string comment_descrption, int user_id, int thread_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICBLService/AddComment", ReplyAction="http://tempuri.org/ICBLService/AddCommentResponse")]
        System.Threading.Tasks.Task AddCommentAsync(string comment_descrption, int user_id, int thread_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICBLService/GetCurrentThreadByThread", ReplyAction="http://tempuri.org/ICBLService/GetCurrentThreadByThreadResponse")]
        CheapoBuildLog.CBLService.ThreadModelForumThread[] GetCurrentThreadByThread(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICBLService/GetCurrentThreadByThread", ReplyAction="http://tempuri.org/ICBLService/GetCurrentThreadByThreadResponse")]
        System.Threading.Tasks.Task<CheapoBuildLog.CBLService.ThreadModelForumThread[]> GetCurrentThreadByThreadAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICBLService/GetCommentCount", ReplyAction="http://tempuri.org/ICBLService/GetCommentCountResponse")]
        int GetCommentCount();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICBLService/GetCommentCount", ReplyAction="http://tempuri.org/ICBLService/GetCommentCountResponse")]
        System.Threading.Tasks.Task<int> GetCommentCountAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ICBLServiceChannel : CheapoBuildLog.CBLService.ICBLService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CBLServiceClient : System.ServiceModel.ClientBase<CheapoBuildLog.CBLService.ICBLService>, CheapoBuildLog.CBLService.ICBLService {
        
        public CBLServiceClient() {
        }
        
        public CBLServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public CBLServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CBLServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CBLServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public int AddUser(
                    int user_id, 
                    string user_first, 
                    string user_last, 
                    string user_username, 
                    string user_nickname, 
                    string user_password, 
                    string user_address, 
                    int user_rating_useful, 
                    string user_gender, 
                    System.DateTime user_registered_date, 
                    System.DateTime user_birthday, 
                    string user_email, 
                    byte[] user_picture, 
                    int user_age, 
                    string user_bio, 
                    string user_mobile, 
                    int user_rating_helpful, 
                    int user_rating_like, 
                    int user_thread_count) {
            return base.Channel.AddUser(user_id, user_first, user_last, user_username, user_nickname, user_password, user_address, user_rating_useful, user_gender, user_registered_date, user_birthday, user_email, user_picture, user_age, user_bio, user_mobile, user_rating_helpful, user_rating_like, user_thread_count);
        }
        
        public System.Threading.Tasks.Task<int> AddUserAsync(
                    int user_id, 
                    string user_first, 
                    string user_last, 
                    string user_username, 
                    string user_nickname, 
                    string user_password, 
                    string user_address, 
                    int user_rating_useful, 
                    string user_gender, 
                    System.DateTime user_registered_date, 
                    System.DateTime user_birthday, 
                    string user_email, 
                    byte[] user_picture, 
                    int user_age, 
                    string user_bio, 
                    string user_mobile, 
                    int user_rating_helpful, 
                    int user_rating_like, 
                    int user_thread_count) {
            return base.Channel.AddUserAsync(user_id, user_first, user_last, user_username, user_nickname, user_password, user_address, user_rating_useful, user_gender, user_registered_date, user_birthday, user_email, user_picture, user_age, user_bio, user_mobile, user_rating_helpful, user_rating_like, user_thread_count);
        }
        
        public void UpdateUser(
                    int user_id, 
                    string user_first, 
                    string user_last, 
                    string user_username, 
                    string user_nickname, 
                    string user_password, 
                    string user_address, 
                    int user_rating_useful, 
                    string user_gender, 
                    System.DateTime user_registered_date, 
                    System.DateTime user_birthday, 
                    string user_email, 
                    byte[] user_picture, 
                    int user_age, 
                    string user_bio, 
                    string user_mobile, 
                    int user_rating_helpful, 
                    int user_rating_like, 
                    int user_thread_count) {
            base.Channel.UpdateUser(user_id, user_first, user_last, user_username, user_nickname, user_password, user_address, user_rating_useful, user_gender, user_registered_date, user_birthday, user_email, user_picture, user_age, user_bio, user_mobile, user_rating_helpful, user_rating_like, user_thread_count);
        }
        
        public System.Threading.Tasks.Task UpdateUserAsync(
                    int user_id, 
                    string user_first, 
                    string user_last, 
                    string user_username, 
                    string user_nickname, 
                    string user_password, 
                    string user_address, 
                    int user_rating_useful, 
                    string user_gender, 
                    System.DateTime user_registered_date, 
                    System.DateTime user_birthday, 
                    string user_email, 
                    byte[] user_picture, 
                    int user_age, 
                    string user_bio, 
                    string user_mobile, 
                    int user_rating_helpful, 
                    int user_rating_like, 
                    int user_thread_count) {
            return base.Channel.UpdateUserAsync(user_id, user_first, user_last, user_username, user_nickname, user_password, user_address, user_rating_useful, user_gender, user_registered_date, user_birthday, user_email, user_picture, user_age, user_bio, user_mobile, user_rating_helpful, user_rating_like, user_thread_count);
        }
        
        public void DeleteUser(int user_id) {
            base.Channel.DeleteUser(user_id);
        }
        
        public System.Threading.Tasks.Task DeleteUserAsync(int user_id) {
            return base.Channel.DeleteUserAsync(user_id);
        }
        
        public CheapoBuildLog.CBLService.user[] GetAllUser() {
            return base.Channel.GetAllUser();
        }
        
        public System.Threading.Tasks.Task<CheapoBuildLog.CBLService.user[]> GetAllUserAsync() {
            return base.Channel.GetAllUserAsync();
        }
        
        public CheapoBuildLog.CBLService.user[] GetUser(string userEmail) {
            return base.Channel.GetUser(userEmail);
        }
        
        public System.Threading.Tasks.Task<CheapoBuildLog.CBLService.user[]> GetUserAsync(string userEmail) {
            return base.Channel.GetUserAsync(userEmail);
        }
        
        public CheapoBuildLog.CBLService.thread[] GetThreads(int id) {
            return base.Channel.GetThreads(id);
        }
        
        public System.Threading.Tasks.Task<CheapoBuildLog.CBLService.thread[]> GetThreadsAsync(int id) {
            return base.Channel.GetThreadsAsync(id);
        }
        
        public int GetTotalThreads() {
            return base.Channel.GetTotalThreads();
        }
        
        public System.Threading.Tasks.Task<int> GetTotalThreadsAsync() {
            return base.Channel.GetTotalThreadsAsync();
        }
        
        public int GetUserCount() {
            return base.Channel.GetUserCount();
        }
        
        public System.Threading.Tasks.Task<int> GetUserCountAsync() {
            return base.Channel.GetUserCountAsync();
        }
        
        public CheapoBuildLog.CBLService.ThreadModelForumThread[] GetCurrentThread(int id) {
            return base.Channel.GetCurrentThread(id);
        }
        
        public System.Threading.Tasks.Task<CheapoBuildLog.CBLService.ThreadModelForumThread[]> GetCurrentThreadAsync(int id) {
            return base.Channel.GetCurrentThreadAsync(id);
        }
        
        public CheapoBuildLog.CBLService.ThreadModelForumThread[] GetCurrentThreadForum() {
            return base.Channel.GetCurrentThreadForum();
        }
        
        public System.Threading.Tasks.Task<CheapoBuildLog.CBLService.ThreadModelForumThread[]> GetCurrentThreadForumAsync() {
            return base.Channel.GetCurrentThreadForumAsync();
        }
        
        public int CreateThread(int user_id, int forum_id, string thread_title, string thread_description) {
            return base.Channel.CreateThread(user_id, forum_id, thread_title, thread_description);
        }
        
        public System.Threading.Tasks.Task<int> CreateThreadAsync(int user_id, int forum_id, string thread_title, string thread_description) {
            return base.Channel.CreateThreadAsync(user_id, forum_id, thread_title, thread_description);
        }
        
        public CheapoBuildLog.CBLService.user[] GetUserByID(int userID) {
            return base.Channel.GetUserByID(userID);
        }
        
        public System.Threading.Tasks.Task<CheapoBuildLog.CBLService.user[]> GetUserByIDAsync(int userID) {
            return base.Channel.GetUserByIDAsync(userID);
        }
        
        public CheapoBuildLog.CBLService.CommentModelThreadComment[] getThreadComment(int thread_id) {
            return base.Channel.getThreadComment(thread_id);
        }
        
        public System.Threading.Tasks.Task<CheapoBuildLog.CBLService.CommentModelThreadComment[]> getThreadCommentAsync(int thread_id) {
            return base.Channel.getThreadCommentAsync(thread_id);
        }
        
        public void AddComment(string comment_descrption, int user_id, int thread_id) {
            base.Channel.AddComment(comment_descrption, user_id, thread_id);
        }
        
        public System.Threading.Tasks.Task AddCommentAsync(string comment_descrption, int user_id, int thread_id) {
            return base.Channel.AddCommentAsync(comment_descrption, user_id, thread_id);
        }
        
        public CheapoBuildLog.CBLService.ThreadModelForumThread[] GetCurrentThreadByThread(int id) {
            return base.Channel.GetCurrentThreadByThread(id);
        }
        
        public System.Threading.Tasks.Task<CheapoBuildLog.CBLService.ThreadModelForumThread[]> GetCurrentThreadByThreadAsync(int id) {
            return base.Channel.GetCurrentThreadByThreadAsync(id);
        }
        
        public int GetCommentCount() {
            return base.Channel.GetCommentCount();
        }
        
        public System.Threading.Tasks.Task<int> GetCommentCountAsync() {
            return base.Channel.GetCommentCountAsync();
        }
    }
}
